{
  "hash": "e6936320f4a5c9454d0ae62078867b5e",
  "result": {
    "markdown": "# Network Estimation\n\nWe started by constructing a Gaussian graphical model of the fourteen risk perception variables using full information maximum likelihood (FIML) estimation. The plotted network is shown in @fig-network-estimation.\n\n\n::: {.cell hash='02_networkestimation_cache/html/fig-network-estimation_4123cfaf838854c2647c1c7e199cf9ce'}\n\n```{.r .cell-code}\n# Run setup script\nsource(\"prerender.R\")\n\nnetwork_data <- data %>% dplyr::select(Weather:Polarization)\nnetwork_labels <- names(network_data)\n\nsingle_net <- bootnet::estimateNetwork(\n  network_data,\n  default = \"mgm\",\n  tuning = 0.25,\n  criterion = \"EBIC\",\n  rule = \"OR\",\n  type = rep(\"c\", 14)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nEstimating Network. Using package::function:\n  - mgm::mgm for network computation\n    - Using glmnet::glmnet\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'level' argument not assigned. Setting level to 1 for all Gaussian/Poisson variables and number of unique values for all categorical variables\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in (function (data, type, level, tuning = 0.25, missing = c(\"listwise\",\n: Bootnet does not support unsigned edges and treats these as positive edges.\n```\n:::\n\n```{.r .cell-code}\n# UNTESTED: Uncomment when next sections are cleaned from psychonetrics code.\n# network <- bootnet::bootnet(\n#   single_net,\n#   nBoots = 1000,\n#   default = \"mgm\",\n#   tuning = 0.25,\n#   rule = \"OR\",\n#   missing = \"listwise\",\n#   criterion = \"EBIC\",\n#   type = \"case\",\n#   nCores = 8,\n#   statistics = c(\n#     \"edge\",\n#     \"strength\",\n#     \"closeness\",\n#     \"betweenness\"\n#   )\n# )\n\n# model <- network_data %>%\n#   psychonetrics::ggm(., vars = network_labels, estimator = \"FIML\")  %>%\n#   psychonetrics::runmodel()\n# \n# matrix <- psychonetrics::getmatrix(model, \"omega\")\n\nplot(single_net, layout = \"circle\", palette = \"colorblind\", edge.labels = TRUE)\n```\n\n::: {.cell-output-display}\n![Network of risk perceptions. Gaussian graphical model with full information using the FIML estimator.](02_networkestimation_files/figure-html/fig-network-estimation-1.png){#fig-network-estimation width=672}\n:::\n:::\n\n\nSince the network is dense and difficult to read, we retrieved network statistics into @tbl-network-stats below.\n\n\n::: {#tbl-network-stats .cell tbl-cap='Descriptive statistics of network nodes' hash='02_networkestimation_cache/html/tbl-network-stats_015033c2bc5426afe915c0384225bc24'}\n\n```{.r .cell-code}\n# FIX: Referencing psychonetrics model, using bootnet instead.\n# summary <- tibble(\n#   Node = model@parameters$var1[1:14],\n#   Maximum = summarise(as_tibble(matrix), across(everything(), max)) %>% unlist(., use.names=FALSE),\n#   Minimum = summarise(as_tibble(matrix), across(everything(), min)) %>% unlist(., use.names=FALSE),\n#   Mean = summarise(as_tibble(matrix), across(everything(), mean)) %>% unlist(., use.names=FALSE),\n#   SD = summarise(as_tibble(matrix), across(everything(), sd)) %>% unlist(., use.names=FALSE)\n# )\n# \n# cent <- qgraph::centralityTable(\n#   matrix,\n#   standardized = FALSE\n# ) %>%\n#   reshape2::dcast(\n#     node ~ measure,\n#     value.var = \"value\"\n#   ) %>%\n#   rename(\n#     Node = \"node\"\n#   )\n# \n# cent$Node <- case_match(\n#   as.integer(cent$Node),\n#   1 ~ \"Weather\",\n#   2 ~ \"Traffic\",\n#   3 ~ \"Fire\",\n#   4 ~ \"Nuclear\",\n#   5 ~ \"Work\", \n#   6 ~ \"Leisure\",\n#   7 ~ \"War\",\n#   8 ~ \"Environmental\",\n#   9 ~ \"Pandemic\",\n#   10 ~ \"Illness\",\n#   11 ~ \"Violence\",\n#   12 ~ \"Operational\",\n#   13 ~ \"Hybrid\",\n#   14 ~ \"Polarization\"\n# )\n# \n# summary <- left_join(summary, cent, by = \"Node\")\n# \n# knitr::kable(\n#   summary,\n#   digits = 2,\n#   col.names = c(\"Node\", \"Maximum\", \"Minimum\", \"Mean\", \"SD\", \"Betweenness\", \"Closeness\", \"Strength\", \"Expected Influence\")\n# )\n```\n:::\n\n\n## Robustness checks\n\nWe then attempted a robustness check by bootstrapping the network structure and retrieving Correlation Stability (CS) coefficients for each of the four measures.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}